#!/bin/bash

#TODO: rewrite such that non-hyphen, non-question-mark punctuation is stripped from filenames
#a command line annotation system
#usage:
# 1: jot -n file.ext	#create file.ext in specified jot location
# 2: jot -n file		#create file.txt in specified jot location

# 3: jot		#open location/jot.txt
# 4: jot list.ext	#if location/list.ext is a file, open it
# 5: jot list		#if location/list.txt is a file, open it



# 6: jot list.ext text as arguments	#if location/list.ext is a file, add 'text as arguments' to it
# 7: jot list text as arguments	#if location/list.txt is a file, add 'text as arguments' to it
# 8: jot text as arguments		#if location/text and location/text.txt (i.e. $1 or $1.txt) are not files, add 'text as arguments' to location/jot.txt

#this script could be POSIX compliant, except the string indexing used to get all but the first argument

loc=$JOT_DIR
arguments="${*:2}"
ed=xdg-open
first_ed=emacs
echo "$@" | grep -q '\-v' && ed=vim && arguments="$(echo "$arguments" | sed 's/-v //' | sed 's/-v//')" #if there's a -v flag, remove it from $arguments and set the editor to vim
[ "$1" = '\-v' ] && shift 1 && echo success #doesn't work
#echo $1 $@ $#
#echo $ed
#echo $arguments


#case 1 & 2:
if [ "$1" = "-n" ]
then 
	#check if $arguments have an extension
	if echo "$arguments" | grep -qE '\.|/'
	then
		#case 1: should this open it, too?
		touch "$loc/$arguments"; $first_ed "$loc/$arguments" &>/dev/null & disown
		exit
	else
		#case 2: should this open it, too?
		touch "$loc/$arguments.txt"; $first_ed "$loc/$arguments.txt" &>/dev/null & disown
		 exit
	fi

fi



#case 3
if [ $# -eq 0 ]
then
	$ed "$loc/jot.txt" &>/dev/null & disown
	exit
fi

#case 6: should this use the -e flag or a compliant equivalent thereof?
if [ -e "$loc/$1" -a -n "$arguments" ]     #shellcheck says to make this [ cond1 ] && [ cond2 ] because "-a is not well defined"
then
	echo "$arguments" >> "$loc/$1"; exit
fi


#case 7: should this use the -e flag or a compliant equivalent thereof?
if [ -e "$loc/$1.txt" -a -n "$arguments" ]	#shellcheck says to make this [ cond1 ] && [ cond2 ] because "-a is not well defined"
then
	echo "$arguments" >> "$loc/$1.txt"; exit
fi

#case 4
if [ -e "$loc/$1" ]
then
	$ed "$loc/$1" &>/dev/null & disown
	exit
fi

#case 5
if [ -e "$loc/$1.txt" ]
then
	$ed "$loc/$1.txt" &>/dev/null & disown
	exit
fi




#case 8
echo "$@" | sed 's/-v //' | sed 's/-v//' >> "$loc/jot.txt"













