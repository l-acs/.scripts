#!/bin/bash

selection="$(xsel)"
logfile="$HOME/.scripts/output/primsel.log"
search="duckduckgo.com/?q="
bookmarks="$HOME/.surf/bookmarks-nicknames.txt" # TODO: switch to env var
engines="$HOME/.surf/engines-nicknames.txt" # TODO: switch to env

# this is a mess. it's decently commented though

remove_duplicates()
{
	# deletes all but latest instance of duplicates in logfile
	cat -n "$logfile" | sort -rn | sort -uk2 | sort -nk1 | cut -f2- > tmpfile && mv tmpfile "$logfile"
}


leave()
{
	[ -n "$selection" ] && echo "$selection" >> "$logfile"
	[ "$action" = 'snarf' ] || xsel -pc 
	remove_duplicates
}



#if prim sel empty, use the clipboard
[ -z "$selection" ] && selection="$(xsel -b | grep -v '^\ No newline at end of selection')"

#if the argument is --dmenu, or if both primsel and clipboard empty, pipe logged primary selections as input
if echo "$@" | grep -q "dmenu" || [ -z "$selection" ]; then
	selection="$(sort -r "$logfile" | rofi -dmenu -i -p "Select input")"
fi

#if it's still empty, empty primary sel and exit with error
if [ -z "$selection" ]; then
	leave
	echo "$selection" | xsel -pi
	exit 1
fi


#if the active window is urxvt and the script was called via a keybinding, try running plumb from the terminal (for local paths)
winname="$(xdotool getactivewindow getwindowname)"

( [ "$winname" = "urxvt" ] || [ "$winname" = "tmux" ] || [ "$winname" = "zsh" ] ) && echo "$@" | grep -q 'keybind' && sleep 0.1 && echo "$selection" | xsel -pi && xdotool getactivewindow key p l u m b Return && exit

options='man emacs feh clone locate run td jot surf vdl-sub firefox mpv search snarf'
dmenu_options=""

for i in $options; do dmenu_options="$i\n$dmenu_options"; done
dmenu_options=$dmenu_options$(cat "$engines" | cut -f1)

#if selection is a file: open it in default application, log and clear prim sel, and exit
if [ -f "$selection" ]; then xdg-open "$selection" &>/dev/null & disown && leave && exit; fi

#if selection is a directory: open it in a terminal, log and clear prim sel, and exit
if [ -d "$selection" ]; then urxvtcd "$selection" & disown && leave && exit; fi


action="$(echo -e "$dmenu_options" | rofi -dmenu -i -p 'Choose an action')"
patternmatch="$(cat "$engines" | tr -s "[:blank:]" ' ' | grep "^$(echo "$action" | cut -f1 -d ' ') ")"

#if nothing is selected, clear prim sel and exit
[ -z "$action" ] && leave  && exit 1

#if action was found among search engines, set action to 'search'
[ -n "$patternmatch" ] && action=search

case "$action" in
    run)
	$selection ;; 

    snarf)
	echo "$selection" | xsel -bi ;;

    man)
	man -Tpdf "$selection" | zathura - ;; #> ~/.scripts/output/man.pdf

    clone)
	(cd ~/.programs/ ; git clone "$selection") ;;

    vdl-sub)
	source ~/.zshrc
	vdl-sub "$selection" ;;

    search)
	#if the first word of the selection is among a user's listed search engines, use that URL for search
	[ -n "$patternmatch" ] && search="$(echo "$patternmatch" | cut -f2 -d ' ')"
	surf "$search$selection" 2>/dev/null ;;

    *)
	$action $selection & disown ;;
    
esac

leave
